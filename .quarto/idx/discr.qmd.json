{"title":"Discritized Table","markdown":{"headingText":"Discritized Table","headingAttr":{"id":"","classes":["unnumbered"],"keyvalue":[]},"containsRefs":false,"markdown":"\n\n```{r setup r and sql, echo=FALSE}\n#| warning: false\n#| echo: false\nlibrary(readr)\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(gt)\nlibrary(DBI)\nlibrary(duckdb)\noptions(duckdb.enable_rstudio_connection_pane=TRUE)\n\ndrv <- duckdb()\ncon <- dbConnect(drv)\nlibrary(reticulate)\n# py_install(\"pandas\")\n```\n\n```{python setup python, echo=FALSE, results=FALSE}\nimport pandas as pd\nimport numpy as np\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\n```\n\n```{r, include=FALSE}\nspotify_cleaned <- readRDS(\"working_tables/spotify_cleaned.rds\")\ntiktok_cleaned <- readRDS(\"working_tables/tiktok_cleaned.rds\")\nbillboard_cleaned <- readRDS(\"working_tables/billboard_cleaned.rds\")\ncombined_cleaned <- readRDS(\"working_tables/combined_cleaned.rds\")\n```\n\n```{sql, include=FALSE}\n#| connection: con\nCREATE OR REPLACE TABLE spotify_cleaned AS\n  SELECT * FROM 'working_tables/spotify_cleaned_sql.csv';\nCREATE OR REPLACE TABLE tiktok_cleaned AS\n  SELECT * FROM 'working_tables/tiktok_cleaned_sql.csv';\nCREATE OR REPLACE TABLE billboard_cleaned AS\n  SELECT * FROM 'working_tables/billboard_cleaned_sql.csv';\nCREATE OR REPLACE TABLE combined_cleaned AS\n  SELECT * FROM 'working_tables/combined_cleaned_sql.csv';\n```\n\n```{python, include=FALSE}\nspotify_cleaned = pd.read_csv(\"working_tables/spotify_cleaned_py.csv\")\ntiktok_cleaned = pd.read_csv(\"working_tables/tiktok_cleaned_py.csv\")\nbillboard_cleaned = pd.read_csv(\"working_tables/billboard_cleaned_py.csv\")\ncombined = pd.read_csv(\"working_tables/combined_py.csv\")\n```\n\n\n\n--------------------------------------------------------------------------------\n\nAs explained earlier, the ranking system for each dataset was slightly different. The rank for songs on the Spotify chart <code>rank_s</code> ranges from 1 to 200. The value is the number that the Spotify algorithm uses to determine popularity. The rank for the TikTok charts <code>rank_t</code> ranges from 0 to 100. The value represents the highest rank on the chart that the song reached. A value of 1 would mean that the song reached the highest place on the chart. The documentation does not describe what a value of 0 means. We assume that it could mean that the song made it to the chart, but did not place highly. The rank for the Billboard chart <code>rank_b</code> ranges from 1 to 100. A value of 1 means that the song was ranked the highest on the chart and a value of 100 means that the song was last on the chart. Because these ranking systems are different, we created a table that has discretized values rather than numbers.\n\nThe term \"Most popular\" was applied to the 10% most popular songs on each chart, \"Popular\" to the top 50%, and \"On chart\" to the remaining values that were not NA.\n\n### Discretizing the Tables\n\n::: panel-tabset\n\n#### R\n\nThis code calculates the percent rank for rank_s, rank_t, and rank_b, then uses a <code>case_when</code> to assign a label to each value. \n\n```{r}\ncombined_discretized <- combined_cleaned |> \n# Spotify\n  mutate(rank_s_percent = percent_rank(rank_s)) |> # get the percent rank for each observation\n  mutate(rank_s_label = case_when( # spotify rank_s shows the highest the song reached on the chart (lower number = more popular)\n    rank_s_percent < 0.10 ~ \"Most popular\",\n    rank_s_percent <= 0.50 ~ \"Popular\",\n    rank_s_percent > 0.50 ~ \"On chart\"\n    )) |>\n  \n#TikTok\n  mutate(rank_t_percent = percent_rank(rank_t)) |> # get the percent rank for each observation\n  mutate(rank_t_label = case_when( # tiktok rank_t shows the value that the algorithm eats (higher number = more popular)\n    rank_t_percent > 0.90 ~ \"Most popular\",\n    rank_t_percent >= 0.50 ~ \"Popular\",\n    rank_t_percent < 0.50 ~ \"On chart\"\n    )) |>\n\n#Billboard\n  mutate(rank_b_percent = percent_rank(rank_b)) |> # get the percent rank for each observation\n  mutate(rank_b_label = case_when( # billboard rank_b shows the rank (lower number = high rank)\n    rank_b_percent < 0.10 ~ \"Most popular\",\n    rank_b_percent <= 0.50 ~ \"Popular\",\n    rank_b_percent > 0.50 ~ \"On chart\"\n    )) |>\n  \n  select(song_title, artist, rank_s, rank_s_label, rank_t, rank_t_label, rank_b, rank_b_label, tempo)\n```\n\n#### SQL\n\nThe function <code>percent_rank</code> is the relative position of the value in the sorted dataset. The statements below use <code>percent_rank</code> to determine if a song is the top x% and classifies the song accordingly. First a temporary table is made with the labels for the rank_s column. Then the labels for rank_t are added to that table, creating yet another temporary table in the process. Finally the labels for rank_b are added and the result is the final discretized table. \n\n```{sql}\n#| connection: con\n--Spotify labels\nCREATE OR REPLACE TEMP TABLE disc_s AS\n  SELECT *,\n         percent_rank() OVER (ORDER BY rank_s) AS rank_s_percent,\n     CASE \n         WHEN rank_s_percent < 10 THEN 'Most popular'\n         WHEN percent_rank() OVER (ORDER BY rank_s) <= 50 THEN 'Popular'\n         ELSE 'On chart'\n     END\n    AS rank_s_label\n  FROM combined_cleaned\n;\n\n--TikTok labels added to the table with the Spotify labels\nCREATE OR REPLACE TEMP TABLE disc_s_t AS\n  SELECT *,\n         percent_rank() OVER (ORDER BY rank_t) AS rank_t_percent,\n     CASE \n         WHEN rank_t_percent > 90 THEN 'Most popular'\n         WHEN percent_rank() OVER (ORDER BY rank_t) >= 50 THEN 'Popular'\n         ELSE 'On chart'\n     END\n    AS rank_t_label\n  FROM disc_s\n\n;\n--Billboard labels added to the table with the Spotify and TikTok labels\nCREATE OR REPLACE TABLE discretized AS\n  SELECT *,\n     percent_rank() OVER (ORDER BY rank_b) AS rank_b_percent,\n     CASE \n         WHEN rank_b_percent < 10 THEN 'Most popular'\n         WHEN percent_rank() OVER (ORDER BY rank_b) <= 50 THEN 'Popular'\n         ELSE 'On chart'\n     END\n    AS rank_b_label\n  FROM disc_s_t\n```\n\n#### Python\n\n<code>pd.qcut</code> discretizes variables into buckets based on rank or quantiles. In this case, the data is being put into buckets based on the specified quantiles of 0%-10%, 10%-50%, and 50%-100%.\n\n```{python}\ncombined['rank_s_label'] = pd.qcut(combined['rank_s'], q=[0, 0.50, 0.90, 1], labels=[\"On chart\", \"Popular\", \"Most popular\"])\ncombined['rank_t_label'] = pd.qcut(combined['rank_t'], q=[0, 0.10, 0.50, 1], labels=[\"Most popular\", \"Popular\", \"On chart\"])\ncombined['rank_b_label'] = pd.qcut(combined['rank_b'], q=[0, 0.10, 0.50, 1], labels=[\"Most popular\", \"Popular\", \"On chart\"])\ncombined\n```\n\n:::\n\nThe discretized table makes the data easier to compare in a glance. While the following analysis will use the un-discretized table, this table is helpful in quickly verifying that we have sorted the rows appropriately.","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"paged","error":false,"eval":true,"cache":true,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","self-contained":true,"output-file":"discr.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","theme":"cosmo","code_folding":"hide","code_summary":"Show the code"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}